version: '3'
services:
  client_app:
    container_name: client_app
    build: ./client_geo1
    volumes:
      - "./client_geo1/public/swagger.json:/client_app/public/swagger.json"
      - ".env:/client_app/.env"
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
  #  deploy:
   #   mode: replicated
    #  replicas: 3
    networks:
      - myNetwork
  server_notifications:
    build: ./notifications
    ports:
      - ${NOTIFIC_PORT}:${NOTIFIC_PORT}
    container_name: ${NOTIFIC_HOST}
    volumes:
      - "./notifications/.env:/server_app/.env"
    networks:
      - myNetwork

  server_geo:
    build: ./geo1
    volumes:
      - "./geo1/.env:/server_app/.env"
    container_name: ${GEO_HOST}
    ports:
      - ${PORT_GEO}:${PORT_GEO}
    networks:
      - myNetwork 
      - myNetworkDB
   # deploy:
    #  mode: replicated
     # replicas: 3
    depends_on:
      - db
      - redis
      
  rebbitMQ:
    image: rabbitmq:3.12-management
    container_name: ${REBBTI_HOST}
    ports:
        - "5672:5672"
        - "15672:15672"
    networks:
      - myNetwork

  db:
    image: postgres:14.4-alpine
    container_name: postgres_Geo
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - myNetworkDB

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - myNetworkDB

networks:
  myNetworkDB:
  myNetwork:
    name: local
